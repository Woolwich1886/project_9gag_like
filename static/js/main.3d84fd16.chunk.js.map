{"version":3,"sources":["posts/components.js","posts/bedata.js","App.js","reportWebVitals.js","index.js"],"names":["FormatPost","props","post","console","log","title","className","onClick","window","location","href","id","category","src","image_url","height","width","alt","NormBtn","author","pub_date","useState","upvotes","setUpvotes","downvotes","setDownvotes","rating","rate","setRate","vote","didclickUp","setDidclickUp","didclickDown","setDidclickDown","BtnUpStyle","BtnDownStyle","RateVal","action","data","JSON","stringify","vote_type","xhr","XMLHttpRequest","responseType","open","setRequestHeader","onload","ChangeRate","status","response","send","BeData","method","url","callback","jsonData","onerror","e","ListOfPosts","postList","setPostList","nextUrl","setNextUrl","useEffect","next","results","Fragment","map","item","newPosts","concat","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d84fd16.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\n\n\n\n\n// Функция для стилизации поста\nexport function FormatPost(props) {\n  \n  const {post} = props\n  function DetailLink() {\n    window.location.href = `http://localhost:8000/api/posts/${post.id}`\n  }\n  console.log(post.title)\n  return <div className=\"container my-5 w-50 border border-dark\">\n    <header className=\"h2\" onClick={DetailLink}>{post.title}</header>\n    <div>Категория: {post.category}</div>\n    <div className=\"text-center\"><img src={post.image_url} height=\"60%\" width=\"60%\" alt={post.title}></img></div>\n      <div>\n{/*        <RateBtn styleBtn=\"btn btn-primary\" rateChoice={post.upvotes} post={post} action='upvote'/>\n        <RateBtn styleBtn=\"btn btn-danger\" rateChoice={post.downvotes} post={post} action='downvote'/> */}\n        <NormBtn post={post}/>\n      </div>\n    <footer>\n    <div>Автор: {post.author}</div>\n    <div>Дата публикации: {post.pub_date}</div>\n    </footer>\n  </div>\n}\n\n\nexport function NormBtn(props) {\n  const {post} = props\n  var [upvotes, setUpvotes] = useState(post.upvotes)\n  var [downvotes, setDownvotes] = useState(post.downvotes)\n  var [rate, setRate] = useState(post.rating)\n  var [didclickUp, setDidclickUp] = useState(post.vote === \"UP\" ? true : false)\n  var [didclickDown, setDidclickDown] = useState(post.vote === \"DOWN\" ? true : false)\n  \n  \n  var BtnUpStyle = didclickUp === false ? \"btn btn-outline-primary\" : \"btn btn-primary\"\n  var BtnDownStyle = didclickDown === false ? \"btn btn-outline-danger\" : \"btn btn-danger\"\n  \n  \n  function RateVal (action) {\n    const data = JSON.stringify({id: post.id, vote_type: action})\n    const xhr = new XMLHttpRequest()\n    xhr.responseType = 'json'\n    xhr.open('POST', 'http://localhost:8000/api/post/rate/')\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n   //const csrftoken = getCookie('csrftoken');\n   // if (csrftoken){\n   //   // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n   //   xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n   //   xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n   // }\n    if (action === 'upvote') {\n    xhr.onload = function(ChangeRate) {\n      if (xhr.status === 200) {\n        console.log (xhr.response, xhr.status, xhr.response.rating)\n        setDidclickUp(true)\n        setRate(xhr.response.rating)\n        setUpvotes(xhr.response.upvotes)\n        setDidclickDown(false)\n        setDownvotes(xhr.response.downvotes)  \n         \n      }else{\n          console.log('sorry')        \n      }\n    }\n    xhr.send(data)\n  }else if (action === 'downvote'){\n    xhr.onload = function(ChangeRate) {\n      if (xhr.status === 200) {\n        console.log (xhr.response, xhr.status, xhr.response.rating)\n        setDidclickDown(true)\n        setRate(xhr.response.rating)\n        setUpvotes(xhr.response.upvotes) \n        setDidclickUp(false) \n        setDownvotes(xhr.response.downvotes)    \n      }else{\n          console.log('sorry')        \n      }\n    }\n    xhr.send(data)\n  }else if (action === 'delupvote'){\n    xhr.onload = function(ChangeRate) {\n      if (xhr.status === 200) {\n        console.log (xhr.response, xhr.status, xhr.response.rating)\n        setDidclickUp(false)\n        setRate(xhr.response.rating)\n        setUpvotes(xhr.response.upvotes) \n        setDownvotes(xhr.response.downvotes)      \n      }else{\n          console.log('sorry')        \n      }\n    }\n    xhr.send(data)\n  }else if (action === 'deldownvote'){\n    xhr.onload = function(ChangeRate) {\n      if (xhr.status === 200) {\n        console.log (xhr.response, xhr.status, xhr.response.rating)\n        setDidclickDown(false)\n        setRate(xhr.response.rating)\n        setDownvotes(xhr.response.downvotes)   \n        setUpvotes(xhr.response.upvotes)  \n      }else{\n          console.log('sorry')        \n      }\n    }\n    xhr.send(data)\n  }\n  }\n  return (<div>\n    <div></div>{rate}\n    <button className={BtnUpStyle} onClick={() => \n      didclickUp === false ? RateVal('upvote') : RateVal('delupvote') }>{upvotes} Апвоут</button>\n    <button className={BtnDownStyle} onClick={() => \n      didclickDown === false ? RateVal('downvote') : RateVal('deldownvote') }>{downvotes} Даунвоут</button>\n    </div>\n  )\n}\n\n\n\n//function getCookie(name) {\n//  var cookieValue = null;\n//  if (document.cookie && document.cookie !== '') {\n//      var cookies = document.cookie.split(';');\n//      for (var i = 0; i < cookies.length; i++) {\n//          var cookie = cookies[i].trim();\n//          // Does this cookie string begin with the name we want?\n//          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n//              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n//              break;\n//          }\n//      }\n//  }\n//  return cookieValue;\n//}","import React, {useEffect, useState} from 'react'\nimport {FormatPost} from './components';\n\nexport function BeData(method, url, callback, data) {\n  var jsonData\n  if (data) {\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  xhr.responseType = 'json'\n  \n  xhr.open(method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n  xhr.onload = function() {\n    if (xhr.status === 200) {\n      console.log(xhr.response, xhr.status)\n      callback(xhr.response, xhr.status)\n    } else {\n      console.log('some error')\n    }\n  }\n  xhr.onerror = function (e) {\n    callback({\"message\": \"Error\"}, 400)\n  }\n  xhr.send(jsonData)\n}\n\n\nexport function ListOfPosts() {\n  var [postList, setPostList] = useState([])\n  var [nextUrl, setNextUrl] = useState(null)\n  useEffect(() => {\n    function WallList(response, status) {\n      setNextUrl(response.next)\n      setPostList(response.results)\n    }\n    BeData('GET', 'http://localhost:8000/api/posts', WallList)\n  }, [])\n  function NewPartOfPosts() {\n    if (nextUrl !== null) {\n      function PartOfPosts(response, status) {\n        if (status === 200) {\n        setNextUrl(response.next)\n        const newPosts = [...postList].concat(response.results)\n        setPostList(newPosts)}\n        else{\n          alert(\"Ошибка при загрузке\")\n        }\n      }\n    \n      BeData(\"GET\", nextUrl, PartOfPosts)\n    }\n\n    }\n    return <React.Fragment>{ postList.map((item)=>{\n      return <FormatPost post={item} key={item.id}/>\n  })}\n  {nextUrl !== null && <button className=\"btn btn-primary\" onClick={NewPartOfPosts}>Загрузить еще</button>}</React.Fragment>}\n  \n  \n\n//\n//\n//\n//import React, {useEffect, useState} from 'react'\n//import {FormatPost} from './components';\n//export function ListOfPosts(props){\n//  const {url} = props\n//  var [post_list, set_post_list] = useState([]);\n//  useEffect(() => {\n//  const xhr = new XMLHttpRequest()\n//  xhr.responseType = 'json'\n//  xhr.open('GET', url)\n//  xhr.onload = function() {\n//    if (xhr.status === 200) {\n//      console.log (xhr.response, xhr.status)\n//      set_post_list(xhr.response)\n//    }else{\n//      console.log('sorry')\n//    }\n//  }\n//  xhr.send()\n//  }, [url])\n//  \n//  return post_list.map((item, index)=>{\n//    return <FormatPost post={item} key={item.id}/>\n//  })\n//     \n//    \n// }\n//","import React from 'react';\n//import logo from './logo.svg';\n//import './App.css';\n\nimport {ListOfPosts} from './posts'\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <ListOfPosts />\n    </div>)\n  //);\n//}\n  }\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\n//const element = <Welcome name=\"Алиса\" />;\n//Когда React встречает подобный элемент, \n//он собирает все JSX-атрибуты и дочерние элементы в один объект \n//и передаёт их нашему компоненту. Этот объект называется «пропсы» (props).\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root') //корневой узел ДОМ\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}