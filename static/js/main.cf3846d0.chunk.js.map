{"version":3,"sources":["posts/bedata.js","posts/comment.js","posts/components.js","posts/detail.js","App.js","reportWebVitals.js","index.js"],"names":["BeData","method","url","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","responseType","open","setRequestHeader","onload","status","response","console","log","onerror","e","send","ListOfPosts","useState","postList","setPostList","nextUrl","setNextUrl","useEffect","next","results","Fragment","map","item","FormatPost","post","detail","id","className","onClick","newPosts","concat","alert","SendComment","props","commentText","setCommentText","comments","setCmnts","onSubmit","evt","preventDefault","text","resize","style","weight","placeholder","value","onChange","target","required","maxLength","type","CommentDesign","ccc","user","comment_date","window","location","href","title","category","src","image_url","height","width","alt","NormBtn","author","pub_date","comments_quantity","upvotes","setUpvotes","downvotes","setDownvotes","rating","rate","setRate","vote","didclickUp","setDidclickUp","didclickDown","setDidclickDown","BtnUpStyle","BtnDownStyle","RateVal","action","vote_type","ChangeRate","DetailPost","path","pathname","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf3846d0.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {FormatPost} from './components';\n\nexport function BeData(method, url, callback, data) {\n  var jsonData\n  if (data) {\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  xhr.responseType = 'json'\n  xhr.open(method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n  xhr.onload = function() {\n    if (xhr.status === 200 || xhr.status === 201) {\n      callback(xhr.response, xhr.status)\n    } else {\n      console.log('some error', xhr.status, xhr.response)\n    }\n  }\n  xhr.onerror = function (e) {\n    callback({\"message\": \"Error\"}, 400)\n  }\n  xhr.send(jsonData)\n}\n\n\nexport function ListOfPosts() {\n  var [postList, setPostList] = useState([])\n  var [nextUrl, setNextUrl] = useState(null)\n  useEffect(() => {\n    function WallList(response, status) {\n      setNextUrl(response.next)\n      setPostList(response.results)\n    }\n    BeData('GET', 'http://localhost:8000/api/posts', WallList)\n  }, [])\n  function NewPartOfPosts() {\n    if (nextUrl !== null) {\n      function PartOfPosts(response, status) {\n        if (status === 200) {\n        setNextUrl(response.next)\n        const newPosts = [...postList].concat(response.results)\n        setPostList(newPosts)}\n        else{\n          alert(\"Ошибка при загрузке\")\n        }\n      }\n    \n      BeData(\"GET\", nextUrl, PartOfPosts)\n    }\n\n    }\n    return <React.Fragment>{ postList.map((item)=>{\n      return <FormatPost post={item} detail = {false} key={item.id}/>\n  })}\n  {nextUrl !== null && <button className=\"btn btn-primary\" onClick={NewPartOfPosts}>Загрузить еще</button>}</React.Fragment>}\n  \n  \n\n//\n//\n//\n//import React, {useEffect, useState} from 'react'\n//import {FormatPost} from './components';\n//export function ListOfPosts(props){\n//  const {url} = props\n//  var [post_list, set_post_list] = useState([]);\n//  useEffect(() => {\n//  const xhr = new XMLHttpRequest()\n//  xhr.responseType = 'json'\n//  xhr.open('GET', url)\n//  xhr.onload = function() {\n//    if (xhr.status === 200) {\n//      console.log (xhr.response, xhr.status)\n//      set_post_list(xhr.response)\n//    }else{\n//      console.log('sorry')\n//    }\n//  }\n//  xhr.send()\n//  }, [url])\n//  \n//  return post_list.map((item, index)=>{\n//    return <FormatPost post={item} key={item.id}/>\n//  })\n//     \n//    \n// }\n//","import React, { useEffect, useState } from \"react\";\nimport { BeData } from \"./bedata\"\nexport function SendComment(props) {\n  \n  const {post} = props\n  const [commentText, setCommentText] = useState(\"\");\n  var data = {}\n  var [comments, setCmnts] = useState([post.comments])\n  useEffect (() => {\n    setCmnts(post.comments)\n  },[setCmnts, post.comments])\n  function callback (response, status) {\n    if (status===201) {\n      console.log(status)\n      setCmnts(response.comments)\n    }\n    else {\n      console.log(status)\n    }\n  }\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      data=JSON.stringify({post: post.id, text: commentText})\n      //alert(`Submitting Name ${commentText}`)\n      BeData(\"POST\", \"http://localhost:8000/api/posts/send_comment\", callback, {post: post.id, text: commentText})\n      console.log(data)\n      setCommentText(\"\")\n      console.log(props)\n  }\n  console.log(\"post-id\", post.id)\n  return (<React.Fragment>\n\n    <form onSubmit={handleSubmit}>\n       \n      <textarea\n       className=\"form-control\"    \n       resize=\"none\"\n       style={{weight: '100%', resize:\"none\"}}\n       placeholder=\"оставьте комментарий здесь\" \n       id=\"floatingTextarea2\"\n       value={commentText}\n       onChange={e => setCommentText(e.target.value)}\n       required={true}\n       maxLength='100'\n       ></textarea>\n    <button type='submit' className=\"btn btn-success\" >Отправить</button>\n    </form>\n     <div>\n     { comments.map((item) => {\n       return <CommentDesign ccc = {item} key={item.id} />})}</div></React.Fragment>)\n  \n}\n\n\n\n\nexport function CommentDesign(props) {\n  const {ccc} = props\n  return <div>\n      \n      <div>{ccc.user}</div>\n      <div>{ccc.text}</div>\n      <div>{ccc.comment_date}</div>\n    </div>\n}\n","import React, { useEffect, useState } from 'react'\nimport { SendComment } from './comment'\n\n// Функция для стилизации поста\nexport function FormatPost(props) {\n  const {post, detail} = props\n  function DetailLink() {\n    window.location.href = `/${post.id}`\n  }\n  \n  console.log(post)\n  return <div className=\"container my-5 w-50 border border-dark\">\n    {detail === false\n    ? <header className=\"h2\" onClick={DetailLink}>{post.title}</header>\n    : <header className=\"h2\">{post.title}</header>\n    }\n    <div>Категория: {post.category}</div>\n    <div className=\"text-center\"><img src={post.image_url} height=\"60%\" width=\"60%\" alt={post.title}></img></div>\n        <NormBtn post={post}/>\n    <div>{detail === true ? <div>asdasd</div> : ''}</div>\n    <footer>\n      <div>Автор: {post.author}</div>\n      <div>Дата публикации: {post.pub_date}</div>\n      <div>Комментарии: {post.comments_quantity}</div>\n    </footer>\n    <div>\n    {detail === true\n    ? <SendComment post = {post} key={post.id} />\n//      ? console.log(detail, post.comments)\n\n    : <div>{post.comments_quantity}</div>\n    \n  }\n    </div>\n  </div>\n}\nexport function CommentSection(props) {\n  \n  const {post} = props\n  var [cmnts, setCmnts] = useState([post.comments])\n  useEffect (() => {\n    setCmnts(post.comments)\n  },[post.comments])\n  return <React.Fragment>\n    <SendComment post={post}/>\n    <div>\n  { cmnts.map((item) => {\n    return <CommentDesign ccc = {item} key={item.id} />\n  })}</div>\n  </React.Fragment>\n}\n//  const {comments} = props\n//  //[comms, setComms] = useState([comments])\n//  //useEffect(() => {\n//  //\n//  //}, [])\n//  return <React.Fragment>{comments.map((item) => {\n//    return <CommentDesign comments={item} key={item.id} />\n//  })}</React.Fragment>\n//  \n//}\n//\n//\nexport function CommentDesign(props) {\n  const {ccc} = props\n  return <div>\n      \n      <div>{ccc.user}</div>\n      <div>{ccc.text}</div>\n      <div>{ccc.comment_date}</div>\n    </div>\n}\n\n\nexport function NormBtn(props) {\n  const {post} = props\n  var [upvotes, setUpvotes] = useState(post.upvotes)\n  var [downvotes, setDownvotes] = useState(post.downvotes)\n  var [rate, setRate] = useState(post.rating)\n  var [didclickUp, setDidclickUp] = useState(post.vote === \"UP\" ? true : false)\n  var [didclickDown, setDidclickDown] = useState(post.vote === \"DOWN\" ? true : false)\n  \n  \n  var BtnUpStyle = didclickUp === false ? \"btn btn-outline-primary\" : \"btn btn-primary\"\n  var BtnDownStyle = didclickDown === false ? \"btn btn-outline-danger\" : \"btn btn-danger\"\n  \n  \n  function RateVal (action) {\n    const data = JSON.stringify({id: post.id, vote_type: action})\n    const xhr = new XMLHttpRequest()\n    xhr.responseType = 'json'\n    xhr.open('POST', 'http://localhost:8000/api/post/rate/')\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n   //const csrftoken = getCookie('csrftoken');\n   // if (csrftoken){\n   //   // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n   //   xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n   //   xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n   // }\n    if (action === 'upvote') {\n    xhr.onload = function(ChangeRate) {\n      if (xhr.status === 200) {\n        console.log (xhr.response, xhr.status, xhr.response.rating)\n        setDidclickUp(true)\n        setRate(xhr.response.rating)\n        setUpvotes(xhr.response.upvotes)\n        setDidclickDown(false)\n        setDownvotes(xhr.response.downvotes)  \n         \n      }else{\n          console.log('sorry')        \n      }\n    }\n    xhr.send(data)\n  }else if (action === 'downvote'){\n    xhr.onload = function(ChangeRate) {\n      if (xhr.status === 200) {\n        console.log (xhr.response, xhr.status, xhr.response.rating)\n        setDidclickDown(true)\n        setRate(xhr.response.rating)\n        setUpvotes(xhr.response.upvotes) \n        setDidclickUp(false) \n        setDownvotes(xhr.response.downvotes)    \n      }else{\n          console.log('sorry')        \n      }\n    }\n    xhr.send(data)\n  }else if (action === 'delupvote'){\n    xhr.onload = function(ChangeRate) {\n      if (xhr.status === 200) {\n        console.log (xhr.response, xhr.status, xhr.response.rating)\n        setDidclickUp(false)\n        setRate(xhr.response.rating)\n        setUpvotes(xhr.response.upvotes) \n        setDownvotes(xhr.response.downvotes)      \n      }else{\n          console.log('sorry')        \n      }\n    }\n    xhr.send(data)\n  }else if (action === 'deldownvote'){\n    xhr.onload = function(ChangeRate) {\n      if (xhr.status === 200) {\n        console.log (xhr.response, xhr.status, xhr.response.rating)\n        setDidclickDown(false)\n        setRate(xhr.response.rating)\n        setDownvotes(xhr.response.downvotes)   \n        setUpvotes(xhr.response.upvotes)  \n      }else{\n          console.log('sorry')        \n      }\n    }\n    xhr.send(data)\n  }\n  }\n  return (<React.Fragment>\n    {rate}\n    <button className={BtnUpStyle} onClick={() => \n      didclickUp === false ? RateVal('upvote') : RateVal('delupvote') }>{upvotes} Апвоут</button>\n    <button className={BtnDownStyle} onClick={() => \n      didclickDown === false ? RateVal('downvote') : RateVal('deldownvote') }>{downvotes} Даунвоут</button>\n    </React.Fragment>\n  )\n}\n\n\n\n//function getCookie(name) {\n//  var cookieValue = null;\n//  if (document.cookie && document.cookie !== '') {\n//      var cookies = document.cookie.split(';');\n//      for (var i = 0; i < cookies.length; i++) {\n//          var cookie = cookies[i].trim();\n//          // Does this cookie string begin with the name we want?\n//          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n//              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n//              break;\n//          }\n//      }\n//  }\n//  return cookieValue;\n//}","import React, {useEffect, useState} from \"react\";\nimport { BeData } from \"./bedata\";\nimport {FormatPost} from \"./components\";\n\n\nexport function DetailPost() {\n    var [postList, setPostList] = useState([])\n    const path = window.location.pathname\n    console.log(path)  \n  useEffect(() => {\n    function WallList(response, status) {\n      setPostList(response)\n    }\n    BeData('GET', `http://localhost:8000/api/posts${path}`, WallList)\n  }, [path])  \n  function BackHome() {\n        window.location.href = `/`\n  }   \n    return  <><button className=\"btn btn-primary\" onClick={BackHome}>Назад</button>\n    <FormatPost post={postList} detail={true} key={postList.id} /></>\n}","import React from 'react';\n//import logo from './logo.svg';\n//import './App.css';\n\nimport {ListOfPosts} from './posts'\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <ListOfPosts />\n      \n    </div>)\n  //);\n//}\n  }\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport { DetailPost } from './posts/detail';\n\n\n\n\n//const element = <Welcome name=\"Алиса\" />;\n//Когда React встречает подобный элемент, \n//он собирает все JSX-атрибуты и дочерние элементы в один объект \n//и передаёт их нашему компоненту. Этот объект называется «пропсы» (props).\n\n \n\n  ReactDOM.render(\n    <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n    document.getElementById('root') //корневой узел ДОМ\n  )\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <DetailPost />\n    </React.StrictMode>,\n    document.getElementById('detail') //корневой узел ДОМ\n  )\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}